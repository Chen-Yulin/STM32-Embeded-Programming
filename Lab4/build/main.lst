ARM GAS  /tmp/ccEGM405.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.ChangeDutyCycle,"ax",%progbits
  19              		.align	1
  20              		.global	ChangeDutyCycle
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	ChangeDutyCycle:
  26              	.LVL0:
  27              	.LFB65:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "gpio.h"
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccEGM405.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** int pressed = 0;
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** void ChangeDutyCycle(int pulse_width)
  60:Core/Src/main.c **** {
  28              		.loc 1 60 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  61:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, pulse_width);
  33              		.loc 1 61 5 view .LVU1
  34 0000 014B     		ldr	r3, .L2
  35 0002 1B68     		ldr	r3, [r3]
  36 0004 9863     		str	r0, [r3, #56]
  62:Core/Src/main.c **** }
  37              		.loc 1 62 1 is_stmt 0 view .LVU2
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00000000 		.word	htim1
  43              		.cfi_endproc
  44              	.LFE65:
  46              		.section	.text.Error_Handler,"ax",%progbits
  47              		.align	1
  48              		.global	Error_Handler
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	Error_Handler:
  54              	.LFB68:
  63:Core/Src/main.c **** /* USER CODE END 0 */
ARM GAS  /tmp/ccEGM405.s 			page 3


  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****  * @brief  The application entry point.
  67:Core/Src/main.c ****  * @retval int
  68:Core/Src/main.c ****  */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****     /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****     HAL_Init();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****     /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****     /* Configure the system clock */
  86:Core/Src/main.c ****     SystemClock_Config();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****     /* Initialize all configured peripherals */
  93:Core/Src/main.c ****     MX_GPIO_Init();
  94:Core/Src/main.c ****     MX_TIM1_Init();
  95:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
  97:Core/Src/main.c ****     HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* Infinite loop */
 102:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****     while (1) {
 104:Core/Src/main.c ****         /* USER CODE END WHILE */
 105:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****         if (!HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) && pressed == 0) {
 107:Core/Src/main.c ****             pressed = 1;
 108:Core/Src/main.c ****             ChangeDutyCycle(100);
 109:Core/Src/main.c ****         }
 110:Core/Src/main.c ****         else if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) && pressed == 1) {
 111:Core/Src/main.c ****             pressed = 0;
 112:Core/Src/main.c ****             ChangeDutyCycle(180);
 113:Core/Src/main.c ****         }
 114:Core/Src/main.c ****     }
 115:Core/Src/main.c ****     /* USER CODE END 3 */
 116:Core/Src/main.c **** }
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /**
 119:Core/Src/main.c ****  * @brief System Clock Configuration
 120:Core/Src/main.c ****  * @retval None
ARM GAS  /tmp/ccEGM405.s 			page 4


 121:Core/Src/main.c ****  */
 122:Core/Src/main.c **** void SystemClock_Config(void)
 123:Core/Src/main.c **** {
 124:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 125:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 128:Core/Src/main.c ****      * in the RCC_OscInitTypeDef structure.
 129:Core/Src/main.c ****      */
 130:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 131:Core/Src/main.c ****     RCC_OscInitStruct.HSEState       = RCC_HSE_ON;
 132:Core/Src/main.c ****     RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 133:Core/Src/main.c ****     RCC_OscInitStruct.HSIState       = RCC_HSI_ON;
 134:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_ON;
 135:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource  = RCC_PLLSOURCE_HSE;
 136:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLMUL     = RCC_PLL_MUL9;
 137:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 138:Core/Src/main.c ****         Error_Handler();
 139:Core/Src/main.c ****     }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 142:Core/Src/main.c ****      */
 143:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType =
 144:Core/Src/main.c ****         RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 145:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 146:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 147:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 148:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 151:Core/Src/main.c ****         Error_Handler();
 152:Core/Src/main.c ****     }
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 156:Core/Src/main.c **** /* USER CODE END 4 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /**
 159:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 160:Core/Src/main.c ****  * @retval None
 161:Core/Src/main.c ****  */
 162:Core/Src/main.c **** void Error_Handler(void)
 163:Core/Src/main.c **** {
  55              		.loc 1 163 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ Volatile: function does not return.
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 164:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 165:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 166:Core/Src/main.c ****     __disable_irq();
  61              		.loc 1 166 5 view .LVU4
  62              	.LBB4:
  63              	.LBI4:
  64              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  /tmp/ccEGM405.s 			page 5


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  /tmp/ccEGM405.s 			page 6


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccEGM405.s 			page 7


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  65              		.loc 2 140 27 view .LVU5
  66              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  67              		.loc 2 142 3 view .LVU6
  68              		.syntax unified
  69              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  70 0000 72B6     		cpsid i
  71              	@ 0 "" 2
  72              		.thumb
  73              		.syntax unified
  74              	.L5:
  75              	.LBE5:
  76              	.LBE4:
 167:Core/Src/main.c ****     while (1) {}
  77              		.loc 1 167 5 view .LVU7
  78              		.loc 1 167 16 view .LVU8
  79              		.loc 1 167 11 view .LVU9
  80 0002 FEE7     		b	.L5
  81              		.cfi_endproc
  82              	.LFE68:
  84              		.section	.text.SystemClock_Config,"ax",%progbits
  85              		.align	1
  86              		.global	SystemClock_Config
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	SystemClock_Config:
  92              	.LFB67:
 123:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  93              		.loc 1 123 1 view -0
  94              		.cfi_startproc
ARM GAS  /tmp/ccEGM405.s 			page 8


  95              		@ args = 0, pretend = 0, frame = 64
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 10B5     		push	{r4, lr}
  98              	.LCFI0:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
 101              		.cfi_offset 14, -4
 102 0002 90B0     		sub	sp, sp, #64
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 72
 124:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 105              		.loc 1 124 5 view .LVU11
 124:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 106              		.loc 1 124 24 is_stmt 0 view .LVU12
 107 0004 06AC     		add	r4, sp, #24
 108 0006 2822     		movs	r2, #40
 109 0008 0021     		movs	r1, #0
 110 000a 2046     		mov	r0, r4
 111 000c FFF7FEFF 		bl	memset
 112              	.LVL1:
 125:Core/Src/main.c **** 
 113              		.loc 1 125 5 is_stmt 1 view .LVU13
 125:Core/Src/main.c **** 
 114              		.loc 1 125 24 is_stmt 0 view .LVU14
 115 0010 0023     		movs	r3, #0
 116 0012 0193     		str	r3, [sp, #4]
 117 0014 0293     		str	r3, [sp, #8]
 118 0016 0393     		str	r3, [sp, #12]
 119 0018 0493     		str	r3, [sp, #16]
 120 001a 0593     		str	r3, [sp, #20]
 130:Core/Src/main.c ****     RCC_OscInitStruct.HSEState       = RCC_HSE_ON;
 121              		.loc 1 130 5 is_stmt 1 view .LVU15
 130:Core/Src/main.c ****     RCC_OscInitStruct.HSEState       = RCC_HSE_ON;
 122              		.loc 1 130 38 is_stmt 0 view .LVU16
 123 001c 0122     		movs	r2, #1
 124 001e 0692     		str	r2, [sp, #24]
 131:Core/Src/main.c ****     RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 125              		.loc 1 131 5 is_stmt 1 view .LVU17
 131:Core/Src/main.c ****     RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 126              		.loc 1 131 38 is_stmt 0 view .LVU18
 127 0020 4FF48033 		mov	r3, #65536
 128 0024 0793     		str	r3, [sp, #28]
 132:Core/Src/main.c ****     RCC_OscInitStruct.HSIState       = RCC_HSI_ON;
 129              		.loc 1 132 5 is_stmt 1 view .LVU19
 133:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_ON;
 130              		.loc 1 133 5 view .LVU20
 133:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_ON;
 131              		.loc 1 133 38 is_stmt 0 view .LVU21
 132 0026 0A92     		str	r2, [sp, #40]
 134:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource  = RCC_PLLSOURCE_HSE;
 133              		.loc 1 134 5 is_stmt 1 view .LVU22
 134:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource  = RCC_PLLSOURCE_HSE;
 134              		.loc 1 134 38 is_stmt 0 view .LVU23
 135 0028 0222     		movs	r2, #2
 136 002a 0D92     		str	r2, [sp, #52]
 135:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLMUL     = RCC_PLL_MUL9;
 137              		.loc 1 135 5 is_stmt 1 view .LVU24
ARM GAS  /tmp/ccEGM405.s 			page 9


 135:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLMUL     = RCC_PLL_MUL9;
 138              		.loc 1 135 38 is_stmt 0 view .LVU25
 139 002c 0E93     		str	r3, [sp, #56]
 136:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 140              		.loc 1 136 5 is_stmt 1 view .LVU26
 136:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 141              		.loc 1 136 38 is_stmt 0 view .LVU27
 142 002e 4FF4E013 		mov	r3, #1835008
 143 0032 0F93     		str	r3, [sp, #60]
 137:Core/Src/main.c ****         Error_Handler();
 144              		.loc 1 137 5 is_stmt 1 view .LVU28
 137:Core/Src/main.c ****         Error_Handler();
 145              		.loc 1 137 9 is_stmt 0 view .LVU29
 146 0034 2046     		mov	r0, r4
 147 0036 FFF7FEFF 		bl	HAL_RCC_OscConfig
 148              	.LVL2:
 137:Core/Src/main.c ****         Error_Handler();
 149              		.loc 1 137 8 discriminator 1 view .LVU30
 150 003a 78B9     		cbnz	r0, .L10
 143:Core/Src/main.c ****         RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 151              		.loc 1 143 5 is_stmt 1 view .LVU31
 143:Core/Src/main.c ****         RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 152              		.loc 1 143 33 is_stmt 0 view .LVU32
 153 003c 0F23     		movs	r3, #15
 154 003e 0193     		str	r3, [sp, #4]
 145:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 155              		.loc 1 145 5 is_stmt 1 view .LVU33
 145:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 156              		.loc 1 145 38 is_stmt 0 view .LVU34
 157 0040 0221     		movs	r1, #2
 158 0042 0291     		str	r1, [sp, #8]
 146:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 159              		.loc 1 146 5 is_stmt 1 view .LVU35
 146:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 160              		.loc 1 146 38 is_stmt 0 view .LVU36
 161 0044 0023     		movs	r3, #0
 162 0046 0393     		str	r3, [sp, #12]
 147:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 163              		.loc 1 147 5 is_stmt 1 view .LVU37
 147:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 164              		.loc 1 147 38 is_stmt 0 view .LVU38
 165 0048 4FF48062 		mov	r2, #1024
 166 004c 0492     		str	r2, [sp, #16]
 148:Core/Src/main.c **** 
 167              		.loc 1 148 5 is_stmt 1 view .LVU39
 148:Core/Src/main.c **** 
 168              		.loc 1 148 38 is_stmt 0 view .LVU40
 169 004e 0593     		str	r3, [sp, #20]
 150:Core/Src/main.c ****         Error_Handler();
 170              		.loc 1 150 5 is_stmt 1 view .LVU41
 150:Core/Src/main.c ****         Error_Handler();
 171              		.loc 1 150 9 is_stmt 0 view .LVU42
 172 0050 01A8     		add	r0, sp, #4
 173 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 174              	.LVL3:
 150:Core/Src/main.c ****         Error_Handler();
 175              		.loc 1 150 8 discriminator 1 view .LVU43
ARM GAS  /tmp/ccEGM405.s 			page 10


 176 0056 18B9     		cbnz	r0, .L11
 153:Core/Src/main.c **** 
 177              		.loc 1 153 1 view .LVU44
 178 0058 10B0     		add	sp, sp, #64
 179              	.LCFI2:
 180              		.cfi_remember_state
 181              		.cfi_def_cfa_offset 8
 182              		@ sp needed
 183 005a 10BD     		pop	{r4, pc}
 184              	.L10:
 185              	.LCFI3:
 186              		.cfi_restore_state
 138:Core/Src/main.c ****     }
 187              		.loc 1 138 9 is_stmt 1 view .LVU45
 188 005c FFF7FEFF 		bl	Error_Handler
 189              	.LVL4:
 190              	.L11:
 151:Core/Src/main.c ****     }
 191              		.loc 1 151 9 view .LVU46
 192 0060 FFF7FEFF 		bl	Error_Handler
 193              	.LVL5:
 194              		.cfi_endproc
 195              	.LFE67:
 197              		.section	.text.main,"ax",%progbits
 198              		.align	1
 199              		.global	main
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	main:
 205              	.LFB66:
  70:Core/Src/main.c **** 
 206              		.loc 1 70 1 view -0
 207              		.cfi_startproc
 208              		@ Volatile: function does not return.
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 08B5     		push	{r3, lr}
 212              	.LCFI4:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 3, -8
 215              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 
 216              		.loc 1 79 5 view .LVU48
 217 0002 FFF7FEFF 		bl	HAL_Init
 218              	.LVL6:
  86:Core/Src/main.c **** 
 219              		.loc 1 86 5 view .LVU49
 220 0006 FFF7FEFF 		bl	SystemClock_Config
 221              	.LVL7:
  93:Core/Src/main.c ****     MX_TIM1_Init();
 222              		.loc 1 93 5 view .LVU50
 223 000a FFF7FEFF 		bl	MX_GPIO_Init
 224              	.LVL8:
  94:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 225              		.loc 1 94 5 view .LVU51
 226 000e FFF7FEFF 		bl	MX_TIM1_Init
ARM GAS  /tmp/ccEGM405.s 			page 11


 227              	.LVL9:
  96:Core/Src/main.c ****     HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 228              		.loc 1 96 5 view .LVU52
 229 0012 164C     		ldr	r4, .L18
 230 0014 0421     		movs	r1, #4
 231 0016 2046     		mov	r0, r4
 232 0018 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 233              	.LVL10:
  97:Core/Src/main.c **** 
 234              		.loc 1 97 5 view .LVU53
 235 001c 0421     		movs	r1, #4
 236 001e 2046     		mov	r0, r4
 237 0020 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 238              	.LVL11:
 239 0024 09E0     		b	.L13
 240              	.L14:
 110:Core/Src/main.c ****             pressed = 0;
 241              		.loc 1 110 14 view .LVU54
 110:Core/Src/main.c ****             pressed = 0;
 242              		.loc 1 110 18 is_stmt 0 view .LVU55
 243 0026 4FF48051 		mov	r1, #4096
 244 002a 1148     		ldr	r0, .L18+4
 245 002c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 246              	.LVL12:
 110:Core/Src/main.c ****             pressed = 0;
 247              		.loc 1 110 17 discriminator 1 view .LVU56
 248 0030 18B1     		cbz	r0, .L13
 110:Core/Src/main.c ****             pressed = 0;
 249              		.loc 1 110 66 discriminator 1 view .LVU57
 250 0032 104B     		ldr	r3, .L18+8
 251 0034 1B68     		ldr	r3, [r3]
 110:Core/Src/main.c ****             pressed = 0;
 252              		.loc 1 110 55 discriminator 1 view .LVU58
 253 0036 012B     		cmp	r3, #1
 254 0038 11D0     		beq	.L17
 255              	.L13:
 103:Core/Src/main.c ****         /* USER CODE END WHILE */
 256              		.loc 1 103 5 is_stmt 1 view .LVU59
 106:Core/Src/main.c ****             pressed = 1;
 257              		.loc 1 106 9 view .LVU60
 106:Core/Src/main.c ****             pressed = 1;
 258              		.loc 1 106 14 is_stmt 0 view .LVU61
 259 003a 4FF48051 		mov	r1, #4096
 260 003e 0C48     		ldr	r0, .L18+4
 261 0040 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 262              	.LVL13:
 106:Core/Src/main.c ****             pressed = 1;
 263              		.loc 1 106 12 discriminator 1 view .LVU62
 264 0044 0028     		cmp	r0, #0
 265 0046 EED1     		bne	.L14
 106:Core/Src/main.c ****             pressed = 1;
 266              		.loc 1 106 62 discriminator 1 view .LVU63
 267 0048 0A4B     		ldr	r3, .L18+8
 268 004a 1B68     		ldr	r3, [r3]
 106:Core/Src/main.c ****             pressed = 1;
 269              		.loc 1 106 51 discriminator 1 view .LVU64
 270 004c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccEGM405.s 			page 12


 271 004e EAD1     		bne	.L14
 107:Core/Src/main.c ****             ChangeDutyCycle(100);
 272              		.loc 1 107 13 is_stmt 1 view .LVU65
 107:Core/Src/main.c ****             ChangeDutyCycle(100);
 273              		.loc 1 107 21 is_stmt 0 view .LVU66
 274 0050 084B     		ldr	r3, .L18+8
 275 0052 0122     		movs	r2, #1
 276 0054 1A60     		str	r2, [r3]
 108:Core/Src/main.c ****         }
 277              		.loc 1 108 13 is_stmt 1 view .LVU67
 278 0056 6420     		movs	r0, #100
 279 0058 FFF7FEFF 		bl	ChangeDutyCycle
 280              	.LVL14:
 281 005c EDE7     		b	.L13
 282              	.L17:
 111:Core/Src/main.c ****             ChangeDutyCycle(180);
 283              		.loc 1 111 13 view .LVU68
 111:Core/Src/main.c ****             ChangeDutyCycle(180);
 284              		.loc 1 111 21 is_stmt 0 view .LVU69
 285 005e 054B     		ldr	r3, .L18+8
 286 0060 0022     		movs	r2, #0
 287 0062 1A60     		str	r2, [r3]
 112:Core/Src/main.c ****         }
 288              		.loc 1 112 13 is_stmt 1 view .LVU70
 289 0064 B420     		movs	r0, #180
 290 0066 FFF7FEFF 		bl	ChangeDutyCycle
 291              	.LVL15:
 292 006a E6E7     		b	.L13
 293              	.L19:
 294              		.align	2
 295              	.L18:
 296 006c 00000000 		.word	htim1
 297 0070 000C0140 		.word	1073810432
 298 0074 00000000 		.word	pressed
 299              		.cfi_endproc
 300              	.LFE66:
 302              		.global	pressed
 303              		.section	.bss.pressed,"aw",%nobits
 304              		.align	2
 307              	pressed:
 308 0000 00000000 		.space	4
 309              		.text
 310              	.Letext0:
 311              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 312              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 313              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 314              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 315              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 316              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 317              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 318              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 319              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 320              		.file 12 "Core/Inc/tim.h"
 321              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 322              		.file 14 "Core/Inc/gpio.h"
 323              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 324              		.file 16 "<built-in>"
ARM GAS  /tmp/ccEGM405.s 			page 13


ARM GAS  /tmp/ccEGM405.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccEGM405.s:19     .text.ChangeDutyCycle:00000000 $t
     /tmp/ccEGM405.s:25     .text.ChangeDutyCycle:00000000 ChangeDutyCycle
     /tmp/ccEGM405.s:42     .text.ChangeDutyCycle:00000008 $d
     /tmp/ccEGM405.s:47     .text.Error_Handler:00000000 $t
     /tmp/ccEGM405.s:53     .text.Error_Handler:00000000 Error_Handler
     /tmp/ccEGM405.s:85     .text.SystemClock_Config:00000000 $t
     /tmp/ccEGM405.s:91     .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccEGM405.s:198    .text.main:00000000 $t
     /tmp/ccEGM405.s:204    .text.main:00000000 main
     /tmp/ccEGM405.s:296    .text.main:0000006c $d
     /tmp/ccEGM405.s:307    .bss.pressed:00000000 pressed
     /tmp/ccEGM405.s:304    .bss.pressed:00000000 $d

UNDEFINED SYMBOLS
htim1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
HAL_GPIO_ReadPin
