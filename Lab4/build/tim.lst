ARM GAS  /tmp/ccHXeZZp.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/tim.c"
  18              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_TIM_Base_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_TIM_Base_MspInit:
  26              	.LVL0:
  27              	.LFB66:
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM1 init function */
  30:Core/Src/tim.c **** void MX_TIM1_Init(void)
  31:Core/Src/tim.c **** {
ARM GAS  /tmp/ccHXeZZp.s 			page 2


  32:Core/Src/tim.c **** 
  33:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  41:Core/Src/tim.c **** 
  42:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  45:Core/Src/tim.c ****   htim1.Instance = TIM1;
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 7200-1;
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  48:Core/Src/tim.c ****   htim1.Init.Period = 200-1;
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  53:Core/Src/tim.c ****   {
  54:Core/Src/tim.c ****     Error_Handler();
  55:Core/Src/tim.c ****   }
  56:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  58:Core/Src/tim.c ****   {
  59:Core/Src/tim.c ****     Error_Handler();
  60:Core/Src/tim.c ****   }
  61:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  62:Core/Src/tim.c ****   {
  63:Core/Src/tim.c ****     Error_Handler();
  64:Core/Src/tim.c ****   }
  65:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  66:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  67:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  68:Core/Src/tim.c ****   {
  69:Core/Src/tim.c ****     Error_Handler();
  70:Core/Src/tim.c ****   }
  71:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  72:Core/Src/tim.c ****   sConfigOC.Pulse = 180;
  73:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  74:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
  75:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  76:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  77:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  78:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  79:Core/Src/tim.c ****   {
  80:Core/Src/tim.c ****     Error_Handler();
  81:Core/Src/tim.c ****   }
  82:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
ARM GAS  /tmp/ccHXeZZp.s 			page 3


  89:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  90:Core/Src/tim.c ****   {
  91:Core/Src/tim.c ****     Error_Handler();
  92:Core/Src/tim.c ****   }
  93:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  94:Core/Src/tim.c **** 
  95:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
  96:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
  97:Core/Src/tim.c **** 
  98:Core/Src/tim.c **** }
  99:Core/Src/tim.c **** 
 100:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 101:Core/Src/tim.c **** {
  28              		.loc 1 101 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 102:Core/Src/tim.c **** 
 103:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
  32              		.loc 1 103 3 view .LVU1
  33              		.loc 1 103 20 is_stmt 0 view .LVU2
  34 0000 0268     		ldr	r2, [r0]
  35              		.loc 1 103 5 view .LVU3
  36 0002 0E4B     		ldr	r3, .L8
  37 0004 9A42     		cmp	r2, r3
  38 0006 00D0     		beq	.L7
  39 0008 7047     		bx	lr
  40              	.L7:
 101:Core/Src/tim.c **** 
  41              		.loc 1 101 1 view .LVU4
  42 000a 00B5     		push	{lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 4
  45              		.cfi_offset 14, -4
  46 000c 83B0     		sub	sp, sp, #12
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 16
 104:Core/Src/tim.c ****   {
 105:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 106:Core/Src/tim.c **** 
 107:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 108:Core/Src/tim.c ****     /* TIM1 clock enable */
 109:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
  49              		.loc 1 109 5 is_stmt 1 view .LVU5
  50              	.LBB2:
  51              		.loc 1 109 5 view .LVU6
  52              		.loc 1 109 5 view .LVU7
  53 000e 03F56443 		add	r3, r3, #58368
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F40062 		orr	r2, r2, #2048
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 109 5 view .LVU8
  58 001a 9B69     		ldr	r3, [r3, #24]
  59 001c 03F40063 		and	r3, r3, #2048
  60 0020 0193     		str	r3, [sp, #4]
  61              		.loc 1 109 5 view .LVU9
  62 0022 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccHXeZZp.s 			page 4


  63              	.LBE2:
  64              		.loc 1 109 5 view .LVU10
 110:Core/Src/tim.c **** 
 111:Core/Src/tim.c ****     /* TIM1 interrupt Init */
 112:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM1_CC_IRQn, 0, 0);
  65              		.loc 1 112 5 view .LVU11
  66 0024 0022     		movs	r2, #0
  67 0026 1146     		mov	r1, r2
  68 0028 1B20     		movs	r0, #27
  69              	.LVL1:
  70              		.loc 1 112 5 is_stmt 0 view .LVU12
  71 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  72              	.LVL2:
 113:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
  73              		.loc 1 113 5 is_stmt 1 view .LVU13
  74 002e 1B20     		movs	r0, #27
  75 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  76              	.LVL3:
 114:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 115:Core/Src/tim.c **** 
 116:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 117:Core/Src/tim.c ****   }
 118:Core/Src/tim.c **** }
  77              		.loc 1 118 1 is_stmt 0 view .LVU14
  78 0034 03B0     		add	sp, sp, #12
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 4
  81              		@ sp needed
  82 0036 5DF804FB 		ldr	pc, [sp], #4
  83              	.L9:
  84 003a 00BF     		.align	2
  85              	.L8:
  86 003c 002C0140 		.word	1073818624
  87              		.cfi_endproc
  88              	.LFE66:
  90              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_TIM_MspPostInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	HAL_TIM_MspPostInit:
  98              	.LVL4:
  99              	.LFB67:
 119:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 120:Core/Src/tim.c **** {
 100              		.loc 1 120 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 24
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		.loc 1 120 1 is_stmt 0 view .LVU16
 105 0000 00B5     		push	{lr}
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 14, -4
 109 0002 87B0     		sub	sp, sp, #28
 110              	.LCFI4:
ARM GAS  /tmp/ccHXeZZp.s 			page 5


 111              		.cfi_def_cfa_offset 32
 121:Core/Src/tim.c **** 
 122:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 112              		.loc 1 122 3 is_stmt 1 view .LVU17
 113              		.loc 1 122 20 is_stmt 0 view .LVU18
 114 0004 0023     		movs	r3, #0
 115 0006 0293     		str	r3, [sp, #8]
 116 0008 0393     		str	r3, [sp, #12]
 117 000a 0493     		str	r3, [sp, #16]
 118 000c 0593     		str	r3, [sp, #20]
 123:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 119              		.loc 1 123 3 is_stmt 1 view .LVU19
 120              		.loc 1 123 15 is_stmt 0 view .LVU20
 121 000e 0268     		ldr	r2, [r0]
 122              		.loc 1 123 5 view .LVU21
 123 0010 0D4B     		ldr	r3, .L14
 124 0012 9A42     		cmp	r2, r3
 125 0014 02D0     		beq	.L13
 126              	.LVL5:
 127              	.L10:
 124:Core/Src/tim.c ****   {
 125:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 126:Core/Src/tim.c **** 
 127:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 128:Core/Src/tim.c **** 
 129:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 130:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 131:Core/Src/tim.c ****     PB14     ------> TIM1_CH2N
 132:Core/Src/tim.c ****     */
 133:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_14;
 134:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 135:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 136:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 137:Core/Src/tim.c **** 
 138:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 139:Core/Src/tim.c **** 
 140:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 141:Core/Src/tim.c ****   }
 142:Core/Src/tim.c **** 
 143:Core/Src/tim.c **** }
 128              		.loc 1 143 1 view .LVU22
 129 0016 07B0     		add	sp, sp, #28
 130              	.LCFI5:
 131              		.cfi_remember_state
 132              		.cfi_def_cfa_offset 4
 133              		@ sp needed
 134 0018 5DF804FB 		ldr	pc, [sp], #4
 135              	.LVL6:
 136              	.L13:
 137              	.LCFI6:
 138              		.cfi_restore_state
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 139              		.loc 1 129 5 is_stmt 1 view .LVU23
 140              	.LBB3:
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 141              		.loc 1 129 5 view .LVU24
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
ARM GAS  /tmp/ccHXeZZp.s 			page 6


 142              		.loc 1 129 5 view .LVU25
 143 001c 03F56443 		add	r3, r3, #58368
 144 0020 9A69     		ldr	r2, [r3, #24]
 145 0022 42F00802 		orr	r2, r2, #8
 146 0026 9A61     		str	r2, [r3, #24]
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 147              		.loc 1 129 5 view .LVU26
 148 0028 9B69     		ldr	r3, [r3, #24]
 149 002a 03F00803 		and	r3, r3, #8
 150 002e 0193     		str	r3, [sp, #4]
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 151              		.loc 1 129 5 view .LVU27
 152 0030 019B     		ldr	r3, [sp, #4]
 153              	.LBE3:
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 154              		.loc 1 129 5 view .LVU28
 133:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 155              		.loc 1 133 5 view .LVU29
 133:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 156              		.loc 1 133 25 is_stmt 0 view .LVU30
 157 0032 4FF48043 		mov	r3, #16384
 158 0036 0293     		str	r3, [sp, #8]
 134:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 159              		.loc 1 134 5 is_stmt 1 view .LVU31
 134:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 160              		.loc 1 134 26 is_stmt 0 view .LVU32
 161 0038 0223     		movs	r3, #2
 162 003a 0393     		str	r3, [sp, #12]
 135:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 163              		.loc 1 135 5 is_stmt 1 view .LVU33
 135:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 164              		.loc 1 135 27 is_stmt 0 view .LVU34
 165 003c 0593     		str	r3, [sp, #20]
 136:Core/Src/tim.c **** 
 166              		.loc 1 136 5 is_stmt 1 view .LVU35
 167 003e 02A9     		add	r1, sp, #8
 168 0040 0248     		ldr	r0, .L14+4
 169              	.LVL7:
 136:Core/Src/tim.c **** 
 170              		.loc 1 136 5 is_stmt 0 view .LVU36
 171 0042 FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL8:
 173              		.loc 1 143 1 view .LVU37
 174 0046 E6E7     		b	.L10
 175              	.L15:
 176              		.align	2
 177              	.L14:
 178 0048 002C0140 		.word	1073818624
 179 004c 000C0140 		.word	1073810432
 180              		.cfi_endproc
 181              	.LFE67:
 183              		.section	.text.MX_TIM1_Init,"ax",%progbits
 184              		.align	1
 185              		.global	MX_TIM1_Init
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
ARM GAS  /tmp/ccHXeZZp.s 			page 7


 190              	MX_TIM1_Init:
 191              	.LFB65:
  31:Core/Src/tim.c **** 
 192              		.loc 1 31 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 88
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 10B5     		push	{r4, lr}
 197              	.LCFI7:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 96B0     		sub	sp, sp, #88
 202              	.LCFI8:
 203              		.cfi_def_cfa_offset 96
  37:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 204              		.loc 1 37 3 view .LVU39
  37:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 205              		.loc 1 37 26 is_stmt 0 view .LVU40
 206 0004 0024     		movs	r4, #0
 207 0006 1294     		str	r4, [sp, #72]
 208 0008 1394     		str	r4, [sp, #76]
 209 000a 1494     		str	r4, [sp, #80]
 210 000c 1594     		str	r4, [sp, #84]
  38:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 211              		.loc 1 38 3 is_stmt 1 view .LVU41
  38:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 212              		.loc 1 38 27 is_stmt 0 view .LVU42
 213 000e 1094     		str	r4, [sp, #64]
 214 0010 1194     		str	r4, [sp, #68]
  39:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 215              		.loc 1 39 3 is_stmt 1 view .LVU43
  39:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 216              		.loc 1 39 22 is_stmt 0 view .LVU44
 217 0012 0994     		str	r4, [sp, #36]
 218 0014 0A94     		str	r4, [sp, #40]
 219 0016 0B94     		str	r4, [sp, #44]
 220 0018 0C94     		str	r4, [sp, #48]
 221 001a 0D94     		str	r4, [sp, #52]
 222 001c 0E94     		str	r4, [sp, #56]
 223 001e 0F94     		str	r4, [sp, #60]
  40:Core/Src/tim.c **** 
 224              		.loc 1 40 3 is_stmt 1 view .LVU45
  40:Core/Src/tim.c **** 
 225              		.loc 1 40 34 is_stmt 0 view .LVU46
 226 0020 2022     		movs	r2, #32
 227 0022 2146     		mov	r1, r4
 228 0024 01A8     		add	r0, sp, #4
 229 0026 FFF7FEFF 		bl	memset
 230              	.LVL9:
  45:Core/Src/tim.c ****   htim1.Init.Prescaler = 7200-1;
 231              		.loc 1 45 3 is_stmt 1 view .LVU47
  45:Core/Src/tim.c ****   htim1.Init.Prescaler = 7200-1;
 232              		.loc 1 45 18 is_stmt 0 view .LVU48
 233 002a 2F48     		ldr	r0, .L30
 234 002c 2F4B     		ldr	r3, .L30+4
 235 002e 0360     		str	r3, [r0]
ARM GAS  /tmp/ccHXeZZp.s 			page 8


  46:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 236              		.loc 1 46 3 is_stmt 1 view .LVU49
  46:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 237              		.loc 1 46 24 is_stmt 0 view .LVU50
 238 0030 41F61F43 		movw	r3, #7199
 239 0034 4360     		str	r3, [r0, #4]
  47:Core/Src/tim.c ****   htim1.Init.Period = 200-1;
 240              		.loc 1 47 3 is_stmt 1 view .LVU51
  47:Core/Src/tim.c ****   htim1.Init.Period = 200-1;
 241              		.loc 1 47 26 is_stmt 0 view .LVU52
 242 0036 8460     		str	r4, [r0, #8]
  48:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 243              		.loc 1 48 3 is_stmt 1 view .LVU53
  48:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 244              		.loc 1 48 21 is_stmt 0 view .LVU54
 245 0038 C723     		movs	r3, #199
 246 003a C360     		str	r3, [r0, #12]
  49:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 247              		.loc 1 49 3 is_stmt 1 view .LVU55
  49:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 248              		.loc 1 49 28 is_stmt 0 view .LVU56
 249 003c 0461     		str	r4, [r0, #16]
  50:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 250              		.loc 1 50 3 is_stmt 1 view .LVU57
  50:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 251              		.loc 1 50 32 is_stmt 0 view .LVU58
 252 003e 4461     		str	r4, [r0, #20]
  51:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 253              		.loc 1 51 3 is_stmt 1 view .LVU59
  51:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 254              		.loc 1 51 32 is_stmt 0 view .LVU60
 255 0040 8461     		str	r4, [r0, #24]
  52:Core/Src/tim.c ****   {
 256              		.loc 1 52 3 is_stmt 1 view .LVU61
  52:Core/Src/tim.c ****   {
 257              		.loc 1 52 7 is_stmt 0 view .LVU62
 258 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 259              	.LVL10:
  52:Core/Src/tim.c ****   {
 260              		.loc 1 52 6 discriminator 1 view .LVU63
 261 0046 0028     		cmp	r0, #0
 262 0048 3BD1     		bne	.L24
 263              	.L17:
  56:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 264              		.loc 1 56 3 is_stmt 1 view .LVU64
  56:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 265              		.loc 1 56 34 is_stmt 0 view .LVU65
 266 004a 4FF48053 		mov	r3, #4096
 267 004e 1293     		str	r3, [sp, #72]
  57:Core/Src/tim.c ****   {
 268              		.loc 1 57 3 is_stmt 1 view .LVU66
  57:Core/Src/tim.c ****   {
 269              		.loc 1 57 7 is_stmt 0 view .LVU67
 270 0050 12A9     		add	r1, sp, #72
 271 0052 2548     		ldr	r0, .L30
 272 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 273              	.LVL11:
ARM GAS  /tmp/ccHXeZZp.s 			page 9


  57:Core/Src/tim.c ****   {
 274              		.loc 1 57 6 discriminator 1 view .LVU68
 275 0058 0028     		cmp	r0, #0
 276 005a 35D1     		bne	.L25
 277              	.L18:
  61:Core/Src/tim.c ****   {
 278              		.loc 1 61 3 is_stmt 1 view .LVU69
  61:Core/Src/tim.c ****   {
 279              		.loc 1 61 7 is_stmt 0 view .LVU70
 280 005c 2248     		ldr	r0, .L30
 281 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 282              	.LVL12:
  61:Core/Src/tim.c ****   {
 283              		.loc 1 61 6 discriminator 1 view .LVU71
 284 0062 0028     		cmp	r0, #0
 285 0064 33D1     		bne	.L26
 286              	.L19:
  65:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 287              		.loc 1 65 3 is_stmt 1 view .LVU72
  65:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 288              		.loc 1 65 37 is_stmt 0 view .LVU73
 289 0066 0023     		movs	r3, #0
 290 0068 1093     		str	r3, [sp, #64]
  66:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 291              		.loc 1 66 3 is_stmt 1 view .LVU74
  66:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 292              		.loc 1 66 33 is_stmt 0 view .LVU75
 293 006a 1193     		str	r3, [sp, #68]
  67:Core/Src/tim.c ****   {
 294              		.loc 1 67 3 is_stmt 1 view .LVU76
  67:Core/Src/tim.c ****   {
 295              		.loc 1 67 7 is_stmt 0 view .LVU77
 296 006c 10A9     		add	r1, sp, #64
 297 006e 1E48     		ldr	r0, .L30
 298 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 299              	.LVL13:
  67:Core/Src/tim.c ****   {
 300              		.loc 1 67 6 discriminator 1 view .LVU78
 301 0074 0028     		cmp	r0, #0
 302 0076 2DD1     		bne	.L27
 303              	.L20:
  71:Core/Src/tim.c ****   sConfigOC.Pulse = 180;
 304              		.loc 1 71 3 is_stmt 1 view .LVU79
  71:Core/Src/tim.c ****   sConfigOC.Pulse = 180;
 305              		.loc 1 71 20 is_stmt 0 view .LVU80
 306 0078 6023     		movs	r3, #96
 307 007a 0993     		str	r3, [sp, #36]
  72:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 308              		.loc 1 72 3 is_stmt 1 view .LVU81
  72:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 309              		.loc 1 72 19 is_stmt 0 view .LVU82
 310 007c B423     		movs	r3, #180
 311 007e 0A93     		str	r3, [sp, #40]
  73:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 312              		.loc 1 73 3 is_stmt 1 view .LVU83
  73:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 313              		.loc 1 73 24 is_stmt 0 view .LVU84
ARM GAS  /tmp/ccHXeZZp.s 			page 10


 314 0080 0023     		movs	r3, #0
 315 0082 0B93     		str	r3, [sp, #44]
  74:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 316              		.loc 1 74 3 is_stmt 1 view .LVU85
  74:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 317              		.loc 1 74 25 is_stmt 0 view .LVU86
 318 0084 0822     		movs	r2, #8
 319 0086 0C92     		str	r2, [sp, #48]
  75:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 320              		.loc 1 75 3 is_stmt 1 view .LVU87
  75:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 321              		.loc 1 75 24 is_stmt 0 view .LVU88
 322 0088 0D93     		str	r3, [sp, #52]
  76:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 323              		.loc 1 76 3 is_stmt 1 view .LVU89
  76:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 324              		.loc 1 76 25 is_stmt 0 view .LVU90
 325 008a 0E93     		str	r3, [sp, #56]
  77:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 326              		.loc 1 77 3 is_stmt 1 view .LVU91
  77:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 327              		.loc 1 77 26 is_stmt 0 view .LVU92
 328 008c 0F93     		str	r3, [sp, #60]
  78:Core/Src/tim.c ****   {
 329              		.loc 1 78 3 is_stmt 1 view .LVU93
  78:Core/Src/tim.c ****   {
 330              		.loc 1 78 7 is_stmt 0 view .LVU94
 331 008e 0422     		movs	r2, #4
 332 0090 09A9     		add	r1, sp, #36
 333 0092 1548     		ldr	r0, .L30
 334 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 335              	.LVL14:
  78:Core/Src/tim.c ****   {
 336              		.loc 1 78 6 discriminator 1 view .LVU95
 337 0098 F8B9     		cbnz	r0, .L28
 338              	.L21:
  82:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 339              		.loc 1 82 3 is_stmt 1 view .LVU96
  82:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 340              		.loc 1 82 40 is_stmt 0 view .LVU97
 341 009a 0023     		movs	r3, #0
 342 009c 0193     		str	r3, [sp, #4]
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 343              		.loc 1 83 3 is_stmt 1 view .LVU98
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 344              		.loc 1 83 41 is_stmt 0 view .LVU99
 345 009e 0293     		str	r3, [sp, #8]
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 346              		.loc 1 84 3 is_stmt 1 view .LVU100
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 347              		.loc 1 84 34 is_stmt 0 view .LVU101
 348 00a0 0393     		str	r3, [sp, #12]
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 349              		.loc 1 85 3 is_stmt 1 view .LVU102
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 350              		.loc 1 85 33 is_stmt 0 view .LVU103
 351 00a2 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccHXeZZp.s 			page 11


  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 352              		.loc 1 86 3 is_stmt 1 view .LVU104
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 353              		.loc 1 86 35 is_stmt 0 view .LVU105
 354 00a4 0593     		str	r3, [sp, #20]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 355              		.loc 1 87 3 is_stmt 1 view .LVU106
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 356              		.loc 1 87 38 is_stmt 0 view .LVU107
 357 00a6 4FF40052 		mov	r2, #8192
 358 00aa 0692     		str	r2, [sp, #24]
  88:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 359              		.loc 1 88 3 is_stmt 1 view .LVU108
  88:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 360              		.loc 1 88 40 is_stmt 0 view .LVU109
 361 00ac 0893     		str	r3, [sp, #32]
  89:Core/Src/tim.c ****   {
 362              		.loc 1 89 3 is_stmt 1 view .LVU110
  89:Core/Src/tim.c ****   {
 363              		.loc 1 89 7 is_stmt 0 view .LVU111
 364 00ae 01A9     		add	r1, sp, #4
 365 00b0 0D48     		ldr	r0, .L30
 366 00b2 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 367              	.LVL15:
  89:Core/Src/tim.c ****   {
 368              		.loc 1 89 6 discriminator 1 view .LVU112
 369 00b6 98B9     		cbnz	r0, .L29
 370              	.L22:
  96:Core/Src/tim.c **** 
 371              		.loc 1 96 3 is_stmt 1 view .LVU113
 372 00b8 0B48     		ldr	r0, .L30
 373 00ba FFF7FEFF 		bl	HAL_TIM_MspPostInit
 374              	.LVL16:
  98:Core/Src/tim.c **** 
 375              		.loc 1 98 1 is_stmt 0 view .LVU114
 376 00be 16B0     		add	sp, sp, #88
 377              	.LCFI9:
 378              		.cfi_remember_state
 379              		.cfi_def_cfa_offset 8
 380              		@ sp needed
 381 00c0 10BD     		pop	{r4, pc}
 382              	.L24:
 383              	.LCFI10:
 384              		.cfi_restore_state
  54:Core/Src/tim.c ****   }
 385              		.loc 1 54 5 is_stmt 1 view .LVU115
 386 00c2 FFF7FEFF 		bl	Error_Handler
 387              	.LVL17:
 388 00c6 C0E7     		b	.L17
 389              	.L25:
  59:Core/Src/tim.c ****   }
 390              		.loc 1 59 5 view .LVU116
 391 00c8 FFF7FEFF 		bl	Error_Handler
 392              	.LVL18:
 393 00cc C6E7     		b	.L18
 394              	.L26:
  63:Core/Src/tim.c ****   }
ARM GAS  /tmp/ccHXeZZp.s 			page 12


 395              		.loc 1 63 5 view .LVU117
 396 00ce FFF7FEFF 		bl	Error_Handler
 397              	.LVL19:
 398 00d2 C8E7     		b	.L19
 399              	.L27:
  69:Core/Src/tim.c ****   }
 400              		.loc 1 69 5 view .LVU118
 401 00d4 FFF7FEFF 		bl	Error_Handler
 402              	.LVL20:
 403 00d8 CEE7     		b	.L20
 404              	.L28:
  80:Core/Src/tim.c ****   }
 405              		.loc 1 80 5 view .LVU119
 406 00da FFF7FEFF 		bl	Error_Handler
 407              	.LVL21:
 408 00de DCE7     		b	.L21
 409              	.L29:
  91:Core/Src/tim.c ****   }
 410              		.loc 1 91 5 view .LVU120
 411 00e0 FFF7FEFF 		bl	Error_Handler
 412              	.LVL22:
 413 00e4 E8E7     		b	.L22
 414              	.L31:
 415 00e6 00BF     		.align	2
 416              	.L30:
 417 00e8 00000000 		.word	htim1
 418 00ec 002C0140 		.word	1073818624
 419              		.cfi_endproc
 420              	.LFE65:
 422              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 423              		.align	1
 424              		.global	HAL_TIM_Base_MspDeInit
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	HAL_TIM_Base_MspDeInit:
 430              	.LVL23:
 431              	.LFB68:
 144:Core/Src/tim.c **** 
 145:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 146:Core/Src/tim.c **** {
 432              		.loc 1 146 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		.loc 1 146 1 is_stmt 0 view .LVU122
 437 0000 08B5     		push	{r3, lr}
 438              	.LCFI11:
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 3, -8
 441              		.cfi_offset 14, -4
 147:Core/Src/tim.c **** 
 148:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 442              		.loc 1 148 3 is_stmt 1 view .LVU123
 443              		.loc 1 148 20 is_stmt 0 view .LVU124
 444 0002 0268     		ldr	r2, [r0]
 445              		.loc 1 148 5 view .LVU125
ARM GAS  /tmp/ccHXeZZp.s 			page 13


 446 0004 064B     		ldr	r3, .L36
 447 0006 9A42     		cmp	r2, r3
 448 0008 00D0     		beq	.L35
 449              	.LVL24:
 450              	.L32:
 149:Core/Src/tim.c ****   {
 150:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 151:Core/Src/tim.c **** 
 152:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 153:Core/Src/tim.c ****     /* Peripheral clock disable */
 154:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 155:Core/Src/tim.c **** 
 156:Core/Src/tim.c ****     /* TIM1 interrupt Deinit */
 157:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_CC_IRQn);
 158:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 159:Core/Src/tim.c **** 
 160:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 161:Core/Src/tim.c ****   }
 162:Core/Src/tim.c **** }
 451              		.loc 1 162 1 view .LVU126
 452 000a 08BD     		pop	{r3, pc}
 453              	.LVL25:
 454              	.L35:
 154:Core/Src/tim.c **** 
 455              		.loc 1 154 5 is_stmt 1 view .LVU127
 456 000c 054A     		ldr	r2, .L36+4
 457 000e 9369     		ldr	r3, [r2, #24]
 458 0010 23F40063 		bic	r3, r3, #2048
 459 0014 9361     		str	r3, [r2, #24]
 157:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 460              		.loc 1 157 5 view .LVU128
 461 0016 1B20     		movs	r0, #27
 462              	.LVL26:
 157:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 463              		.loc 1 157 5 is_stmt 0 view .LVU129
 464 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 465              	.LVL27:
 466              		.loc 1 162 1 view .LVU130
 467 001c F5E7     		b	.L32
 468              	.L37:
 469 001e 00BF     		.align	2
 470              	.L36:
 471 0020 002C0140 		.word	1073818624
 472 0024 00100240 		.word	1073876992
 473              		.cfi_endproc
 474              	.LFE68:
 476              		.global	htim1
 477              		.section	.bss.htim1,"aw",%nobits
 478              		.align	2
 481              	htim1:
 482 0000 00000000 		.space	72
 482      00000000 
 482      00000000 
 482      00000000 
 482      00000000 
 483              		.text
 484              	.Letext0:
ARM GAS  /tmp/ccHXeZZp.s 			page 14


 485              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 486              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 487              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 488              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 489              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 490              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 491              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 492              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 493              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 494              		.file 11 "Core/Inc/tim.h"
 495              		.file 12 "Core/Inc/main.h"
 496              		.file 13 "<built-in>"
ARM GAS  /tmp/ccHXeZZp.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
     /tmp/ccHXeZZp.s:19     .text.HAL_TIM_Base_MspInit:00000000 $t
     /tmp/ccHXeZZp.s:25     .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
     /tmp/ccHXeZZp.s:86     .text.HAL_TIM_Base_MspInit:0000003c $d
     /tmp/ccHXeZZp.s:91     .text.HAL_TIM_MspPostInit:00000000 $t
     /tmp/ccHXeZZp.s:97     .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
     /tmp/ccHXeZZp.s:178    .text.HAL_TIM_MspPostInit:00000048 $d
     /tmp/ccHXeZZp.s:184    .text.MX_TIM1_Init:00000000 $t
     /tmp/ccHXeZZp.s:190    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccHXeZZp.s:417    .text.MX_TIM1_Init:000000e8 $d
     /tmp/ccHXeZZp.s:481    .bss.htim1:00000000 htim1
     /tmp/ccHXeZZp.s:423    .text.HAL_TIM_Base_MspDeInit:00000000 $t
     /tmp/ccHXeZZp.s:429    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
     /tmp/ccHXeZZp.s:471    .text.HAL_TIM_Base_MspDeInit:00000020 $d
     /tmp/ccHXeZZp.s:478    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
HAL_NVIC_DisableIRQ
