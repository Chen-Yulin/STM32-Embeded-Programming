ARM GAS  /tmp/ccQgOQLJ.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/tim.c"
  18              		.section	.text.MX_TIM2_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_TIM2_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_TIM2_Init:
  26              	.LFB66:
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim2;
  29:Core/Src/tim.c **** 
  30:Core/Src/tim.c **** /* TIM1 init function */
  31:Core/Src/tim.c **** void MX_TIM1_Init(void)
  32:Core/Src/tim.c **** {
ARM GAS  /tmp/ccQgOQLJ.s 			page 2


  33:Core/Src/tim.c **** 
  34:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  35:Core/Src/tim.c **** 
  36:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  37:Core/Src/tim.c **** 
  38:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  42:Core/Src/tim.c **** 
  43:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  44:Core/Src/tim.c **** 
  45:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  46:Core/Src/tim.c ****   htim1.Instance = TIM1;
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 7200-1;
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  49:Core/Src/tim.c ****   htim1.Init.Period = 200-1;
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  54:Core/Src/tim.c ****   {
  55:Core/Src/tim.c ****     Error_Handler();
  56:Core/Src/tim.c ****   }
  57:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  59:Core/Src/tim.c ****   {
  60:Core/Src/tim.c ****     Error_Handler();
  61:Core/Src/tim.c ****   }
  62:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  63:Core/Src/tim.c ****   {
  64:Core/Src/tim.c ****     Error_Handler();
  65:Core/Src/tim.c ****   }
  66:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  69:Core/Src/tim.c ****   {
  70:Core/Src/tim.c ****     Error_Handler();
  71:Core/Src/tim.c ****   }
  72:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 180;
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  80:Core/Src/tim.c ****   {
  81:Core/Src/tim.c ****     Error_Handler();
  82:Core/Src/tim.c ****   }
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
ARM GAS  /tmp/ccQgOQLJ.s 			page 3


  90:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  91:Core/Src/tim.c ****   {
  92:Core/Src/tim.c ****     Error_Handler();
  93:Core/Src/tim.c ****   }
  94:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  95:Core/Src/tim.c **** 
  96:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
  97:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
  98:Core/Src/tim.c **** 
  99:Core/Src/tim.c **** }
 100:Core/Src/tim.c **** /* TIM2 init function */
 101:Core/Src/tim.c **** void MX_TIM2_Init(void)
 102:Core/Src/tim.c **** {
  27              		.loc 1 102 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 8BB0     		sub	sp, sp, #44
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 48
 103:Core/Src/tim.c **** 
 104:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 105:Core/Src/tim.c **** 
 106:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 0 */
 107:Core/Src/tim.c **** 
 108:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  38              		.loc 1 108 3 view .LVU1
  39              		.loc 1 108 26 is_stmt 0 view .LVU2
  40 0004 0023     		movs	r3, #0
  41 0006 0693     		str	r3, [sp, #24]
  42 0008 0793     		str	r3, [sp, #28]
  43 000a 0893     		str	r3, [sp, #32]
  44 000c 0993     		str	r3, [sp, #36]
 109:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  45              		.loc 1 109 3 is_stmt 1 view .LVU3
  46              		.loc 1 109 27 is_stmt 0 view .LVU4
  47 000e 0493     		str	r3, [sp, #16]
  48 0010 0593     		str	r3, [sp, #20]
 110:Core/Src/tim.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
  49              		.loc 1 110 3 is_stmt 1 view .LVU5
  50              		.loc 1 110 22 is_stmt 0 view .LVU6
  51 0012 0093     		str	r3, [sp]
  52 0014 0193     		str	r3, [sp, #4]
  53 0016 0293     		str	r3, [sp, #8]
  54 0018 0393     		str	r3, [sp, #12]
 111:Core/Src/tim.c **** 
 112:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 113:Core/Src/tim.c **** 
 114:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 1 */
 115:Core/Src/tim.c ****   htim2.Instance = TIM2;
  55              		.loc 1 115 3 is_stmt 1 view .LVU7
  56              		.loc 1 115 18 is_stmt 0 view .LVU8
  57 001a 2048     		ldr	r0, .L13
ARM GAS  /tmp/ccQgOQLJ.s 			page 4


  58 001c 4FF08042 		mov	r2, #1073741824
  59 0020 0260     		str	r2, [r0]
 116:Core/Src/tim.c ****   htim2.Init.Prescaler = 0;
  60              		.loc 1 116 3 is_stmt 1 view .LVU9
  61              		.loc 1 116 24 is_stmt 0 view .LVU10
  62 0022 4360     		str	r3, [r0, #4]
 117:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  63              		.loc 1 117 3 is_stmt 1 view .LVU11
  64              		.loc 1 117 26 is_stmt 0 view .LVU12
  65 0024 8360     		str	r3, [r0, #8]
 118:Core/Src/tim.c ****   htim2.Init.Period = 65535;
  66              		.loc 1 118 3 is_stmt 1 view .LVU13
  67              		.loc 1 118 21 is_stmt 0 view .LVU14
  68 0026 4FF6FF72 		movw	r2, #65535
  69 002a C260     		str	r2, [r0, #12]
 119:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  70              		.loc 1 119 3 is_stmt 1 view .LVU15
  71              		.loc 1 119 28 is_stmt 0 view .LVU16
  72 002c 0361     		str	r3, [r0, #16]
 120:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  73              		.loc 1 120 3 is_stmt 1 view .LVU17
  74              		.loc 1 120 32 is_stmt 0 view .LVU18
  75 002e 8361     		str	r3, [r0, #24]
 121:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  76              		.loc 1 121 3 is_stmt 1 view .LVU19
  77              		.loc 1 121 7 is_stmt 0 view .LVU20
  78 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
  79              	.LVL0:
  80              		.loc 1 121 6 discriminator 1 view .LVU21
  81 0034 10BB     		cbnz	r0, .L8
  82              	.L2:
 122:Core/Src/tim.c ****   {
 123:Core/Src/tim.c ****     Error_Handler();
 124:Core/Src/tim.c ****   }
 125:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  83              		.loc 1 125 3 is_stmt 1 view .LVU22
  84              		.loc 1 125 34 is_stmt 0 view .LVU23
  85 0036 4FF48053 		mov	r3, #4096
  86 003a 0693     		str	r3, [sp, #24]
 126:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  87              		.loc 1 126 3 is_stmt 1 view .LVU24
  88              		.loc 1 126 7 is_stmt 0 view .LVU25
  89 003c 06A9     		add	r1, sp, #24
  90 003e 1748     		ldr	r0, .L13
  91 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  92              	.LVL1:
  93              		.loc 1 126 6 discriminator 1 view .LVU26
  94 0044 E8B9     		cbnz	r0, .L9
  95              	.L3:
 127:Core/Src/tim.c ****   {
 128:Core/Src/tim.c ****     Error_Handler();
 129:Core/Src/tim.c ****   }
 130:Core/Src/tim.c ****   if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
  96              		.loc 1 130 3 is_stmt 1 view .LVU27
  97              		.loc 1 130 7 is_stmt 0 view .LVU28
  98 0046 1548     		ldr	r0, .L13
  99 0048 FFF7FEFF 		bl	HAL_TIM_IC_Init
ARM GAS  /tmp/ccQgOQLJ.s 			page 5


 100              	.LVL2:
 101              		.loc 1 130 6 discriminator 1 view .LVU29
 102 004c E0B9     		cbnz	r0, .L10
 103              	.L4:
 131:Core/Src/tim.c ****   {
 132:Core/Src/tim.c ****     Error_Handler();
 133:Core/Src/tim.c ****   }
 134:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 104              		.loc 1 134 3 is_stmt 1 view .LVU30
 105              		.loc 1 134 37 is_stmt 0 view .LVU31
 106 004e 0023     		movs	r3, #0
 107 0050 0493     		str	r3, [sp, #16]
 135:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 108              		.loc 1 135 3 is_stmt 1 view .LVU32
 109              		.loc 1 135 33 is_stmt 0 view .LVU33
 110 0052 0593     		str	r3, [sp, #20]
 136:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 111              		.loc 1 136 3 is_stmt 1 view .LVU34
 112              		.loc 1 136 7 is_stmt 0 view .LVU35
 113 0054 04A9     		add	r1, sp, #16
 114 0056 1148     		ldr	r0, .L13
 115 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 116              	.LVL3:
 117              		.loc 1 136 6 discriminator 1 view .LVU36
 118 005c B8B9     		cbnz	r0, .L11
 119              	.L5:
 137:Core/Src/tim.c ****   {
 138:Core/Src/tim.c ****     Error_Handler();
 139:Core/Src/tim.c ****   }
 140:Core/Src/tim.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 120              		.loc 1 140 3 is_stmt 1 view .LVU37
 121              		.loc 1 140 24 is_stmt 0 view .LVU38
 122 005e 0023     		movs	r3, #0
 123 0060 0093     		str	r3, [sp]
 141:Core/Src/tim.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 124              		.loc 1 141 3 is_stmt 1 view .LVU39
 125              		.loc 1 141 25 is_stmt 0 view .LVU40
 126 0062 0122     		movs	r2, #1
 127 0064 0192     		str	r2, [sp, #4]
 142:Core/Src/tim.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 128              		.loc 1 142 3 is_stmt 1 view .LVU41
 129              		.loc 1 142 25 is_stmt 0 view .LVU42
 130 0066 0293     		str	r3, [sp, #8]
 143:Core/Src/tim.c ****   sConfigIC.ICFilter = 0;
 131              		.loc 1 143 3 is_stmt 1 view .LVU43
 132              		.loc 1 143 22 is_stmt 0 view .LVU44
 133 0068 0393     		str	r3, [sp, #12]
 144:Core/Src/tim.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 134              		.loc 1 144 3 is_stmt 1 view .LVU45
 135              		.loc 1 144 7 is_stmt 0 view .LVU46
 136 006a 0422     		movs	r2, #4
 137 006c 6946     		mov	r1, sp
 138 006e 0B48     		ldr	r0, .L13
 139 0070 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 140              	.LVL4:
 141              		.loc 1 144 6 discriminator 1 view .LVU47
 142 0074 70B9     		cbnz	r0, .L12
ARM GAS  /tmp/ccQgOQLJ.s 			page 6


 143              	.L1:
 145:Core/Src/tim.c ****   {
 146:Core/Src/tim.c ****     Error_Handler();
 147:Core/Src/tim.c ****   }
 148:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 149:Core/Src/tim.c **** 
 150:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 2 */
 151:Core/Src/tim.c **** 
 152:Core/Src/tim.c **** }
 144              		.loc 1 152 1 view .LVU48
 145 0076 0BB0     		add	sp, sp, #44
 146              	.LCFI2:
 147              		.cfi_remember_state
 148              		.cfi_def_cfa_offset 4
 149              		@ sp needed
 150 0078 5DF804FB 		ldr	pc, [sp], #4
 151              	.L8:
 152              	.LCFI3:
 153              		.cfi_restore_state
 123:Core/Src/tim.c ****   }
 154              		.loc 1 123 5 is_stmt 1 view .LVU49
 155 007c FFF7FEFF 		bl	Error_Handler
 156              	.LVL5:
 157 0080 D9E7     		b	.L2
 158              	.L9:
 128:Core/Src/tim.c ****   }
 159              		.loc 1 128 5 view .LVU50
 160 0082 FFF7FEFF 		bl	Error_Handler
 161              	.LVL6:
 162 0086 DEE7     		b	.L3
 163              	.L10:
 132:Core/Src/tim.c ****   }
 164              		.loc 1 132 5 view .LVU51
 165 0088 FFF7FEFF 		bl	Error_Handler
 166              	.LVL7:
 167 008c DFE7     		b	.L4
 168              	.L11:
 138:Core/Src/tim.c ****   }
 169              		.loc 1 138 5 view .LVU52
 170 008e FFF7FEFF 		bl	Error_Handler
 171              	.LVL8:
 172 0092 E4E7     		b	.L5
 173              	.L12:
 146:Core/Src/tim.c ****   }
 174              		.loc 1 146 5 view .LVU53
 175 0094 FFF7FEFF 		bl	Error_Handler
 176              	.LVL9:
 177              		.loc 1 152 1 is_stmt 0 view .LVU54
 178 0098 EDE7     		b	.L1
 179              	.L14:
 180 009a 00BF     		.align	2
 181              	.L13:
 182 009c 00000000 		.word	htim2
 183              		.cfi_endproc
 184              	.LFE66:
 186              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 187              		.align	1
ARM GAS  /tmp/ccQgOQLJ.s 			page 7


 188              		.global	HAL_TIM_Base_MspInit
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	HAL_TIM_Base_MspInit:
 194              	.LVL10:
 195              	.LFB67:
 153:Core/Src/tim.c **** 
 154:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 155:Core/Src/tim.c **** {
 196              		.loc 1 155 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 32
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		.loc 1 155 1 is_stmt 0 view .LVU56
 201 0000 00B5     		push	{lr}
 202              	.LCFI4:
 203              		.cfi_def_cfa_offset 4
 204              		.cfi_offset 14, -4
 205 0002 89B0     		sub	sp, sp, #36
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 40
 156:Core/Src/tim.c **** 
 157:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 208              		.loc 1 157 3 is_stmt 1 view .LVU57
 209              		.loc 1 157 20 is_stmt 0 view .LVU58
 210 0004 0023     		movs	r3, #0
 211 0006 0493     		str	r3, [sp, #16]
 212 0008 0593     		str	r3, [sp, #20]
 213 000a 0693     		str	r3, [sp, #24]
 214 000c 0793     		str	r3, [sp, #28]
 158:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 215              		.loc 1 158 3 is_stmt 1 view .LVU59
 216              		.loc 1 158 20 is_stmt 0 view .LVU60
 217 000e 0368     		ldr	r3, [r0]
 218              		.loc 1 158 5 view .LVU61
 219 0010 174A     		ldr	r2, .L21
 220 0012 9342     		cmp	r3, r2
 221 0014 05D0     		beq	.L19
 159:Core/Src/tim.c ****   {
 160:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 161:Core/Src/tim.c **** 
 162:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 163:Core/Src/tim.c ****     /* TIM1 clock enable */
 164:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 165:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 166:Core/Src/tim.c **** 
 167:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 168:Core/Src/tim.c ****   }
 169:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM2)
 222              		.loc 1 169 8 is_stmt 1 view .LVU62
 223              		.loc 1 169 10 is_stmt 0 view .LVU63
 224 0016 B3F1804F 		cmp	r3, #1073741824
 225 001a 0DD0     		beq	.L20
 226              	.LVL11:
 227              	.L15:
 170:Core/Src/tim.c ****   {
ARM GAS  /tmp/ccQgOQLJ.s 			page 8


 171:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 172:Core/Src/tim.c **** 
 173:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 0 */
 174:Core/Src/tim.c ****     /* TIM2 clock enable */
 175:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 176:Core/Src/tim.c **** 
 177:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 178:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 179:Core/Src/tim.c ****     PA1     ------> TIM2_CH2
 180:Core/Src/tim.c ****     */
 181:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 182:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 183:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 184:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 185:Core/Src/tim.c **** 
 186:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 187:Core/Src/tim.c **** 
 188:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 1 */
 189:Core/Src/tim.c ****   }
 190:Core/Src/tim.c **** }
 228              		.loc 1 190 1 view .LVU64
 229 001c 09B0     		add	sp, sp, #36
 230              	.LCFI6:
 231              		.cfi_remember_state
 232              		.cfi_def_cfa_offset 4
 233              		@ sp needed
 234 001e 5DF804FB 		ldr	pc, [sp], #4
 235              	.LVL12:
 236              	.L19:
 237              	.LCFI7:
 238              		.cfi_restore_state
 164:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 239              		.loc 1 164 5 is_stmt 1 view .LVU65
 240              	.LBB2:
 164:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 241              		.loc 1 164 5 view .LVU66
 164:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 242              		.loc 1 164 5 view .LVU67
 243 0022 144B     		ldr	r3, .L21+4
 244 0024 9A69     		ldr	r2, [r3, #24]
 245 0026 42F40062 		orr	r2, r2, #2048
 246 002a 9A61     		str	r2, [r3, #24]
 164:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 247              		.loc 1 164 5 view .LVU68
 248 002c 9B69     		ldr	r3, [r3, #24]
 249 002e 03F40063 		and	r3, r3, #2048
 250 0032 0193     		str	r3, [sp, #4]
 164:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 251              		.loc 1 164 5 view .LVU69
 252 0034 019B     		ldr	r3, [sp, #4]
 253              	.LBE2:
 164:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 254              		.loc 1 164 5 view .LVU70
 255 0036 F1E7     		b	.L15
 256              	.L20:
 175:Core/Src/tim.c **** 
 257              		.loc 1 175 5 view .LVU71
ARM GAS  /tmp/ccQgOQLJ.s 			page 9


 258              	.LBB3:
 175:Core/Src/tim.c **** 
 259              		.loc 1 175 5 view .LVU72
 175:Core/Src/tim.c **** 
 260              		.loc 1 175 5 view .LVU73
 261 0038 03F50433 		add	r3, r3, #135168
 262 003c DA69     		ldr	r2, [r3, #28]
 263 003e 42F00102 		orr	r2, r2, #1
 264 0042 DA61     		str	r2, [r3, #28]
 175:Core/Src/tim.c **** 
 265              		.loc 1 175 5 view .LVU74
 266 0044 DA69     		ldr	r2, [r3, #28]
 267 0046 02F00102 		and	r2, r2, #1
 268 004a 0292     		str	r2, [sp, #8]
 175:Core/Src/tim.c **** 
 269              		.loc 1 175 5 view .LVU75
 270 004c 029A     		ldr	r2, [sp, #8]
 271              	.LBE3:
 175:Core/Src/tim.c **** 
 272              		.loc 1 175 5 view .LVU76
 177:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 273              		.loc 1 177 5 view .LVU77
 274              	.LBB4:
 177:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 275              		.loc 1 177 5 view .LVU78
 177:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 276              		.loc 1 177 5 view .LVU79
 277 004e 9A69     		ldr	r2, [r3, #24]
 278 0050 42F00402 		orr	r2, r2, #4
 279 0054 9A61     		str	r2, [r3, #24]
 177:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 280              		.loc 1 177 5 view .LVU80
 281 0056 9B69     		ldr	r3, [r3, #24]
 282 0058 03F00403 		and	r3, r3, #4
 283 005c 0393     		str	r3, [sp, #12]
 177:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 284              		.loc 1 177 5 view .LVU81
 285 005e 039B     		ldr	r3, [sp, #12]
 286              	.LBE4:
 177:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 287              		.loc 1 177 5 view .LVU82
 181:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 288              		.loc 1 181 5 view .LVU83
 181:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 289              		.loc 1 181 25 is_stmt 0 view .LVU84
 290 0060 0223     		movs	r3, #2
 291 0062 0493     		str	r3, [sp, #16]
 182:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 292              		.loc 1 182 5 is_stmt 1 view .LVU85
 183:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 293              		.loc 1 183 5 view .LVU86
 184:Core/Src/tim.c **** 
 294              		.loc 1 184 5 view .LVU87
 295 0064 04A9     		add	r1, sp, #16
 296 0066 0448     		ldr	r0, .L21+8
 297              	.LVL13:
 184:Core/Src/tim.c **** 
ARM GAS  /tmp/ccQgOQLJ.s 			page 10


 298              		.loc 1 184 5 is_stmt 0 view .LVU88
 299 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 300              	.LVL14:
 301              		.loc 1 190 1 view .LVU89
 302 006c D6E7     		b	.L15
 303              	.L22:
 304 006e 00BF     		.align	2
 305              	.L21:
 306 0070 002C0140 		.word	1073818624
 307 0074 00100240 		.word	1073876992
 308 0078 00080140 		.word	1073809408
 309              		.cfi_endproc
 310              	.LFE67:
 312              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 313              		.align	1
 314              		.global	HAL_TIM_MspPostInit
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	HAL_TIM_MspPostInit:
 320              	.LVL15:
 321              	.LFB68:
 191:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 192:Core/Src/tim.c **** {
 322              		.loc 1 192 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 24
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		.loc 1 192 1 is_stmt 0 view .LVU91
 327 0000 00B5     		push	{lr}
 328              	.LCFI8:
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 14, -4
 331 0002 87B0     		sub	sp, sp, #28
 332              	.LCFI9:
 333              		.cfi_def_cfa_offset 32
 193:Core/Src/tim.c **** 
 194:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 334              		.loc 1 194 3 is_stmt 1 view .LVU92
 335              		.loc 1 194 20 is_stmt 0 view .LVU93
 336 0004 0023     		movs	r3, #0
 337 0006 0293     		str	r3, [sp, #8]
 338 0008 0393     		str	r3, [sp, #12]
 339 000a 0493     		str	r3, [sp, #16]
 340 000c 0593     		str	r3, [sp, #20]
 195:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 341              		.loc 1 195 3 is_stmt 1 view .LVU94
 342              		.loc 1 195 15 is_stmt 0 view .LVU95
 343 000e 0268     		ldr	r2, [r0]
 344              		.loc 1 195 5 view .LVU96
 345 0010 0D4B     		ldr	r3, .L27
 346 0012 9A42     		cmp	r2, r3
 347 0014 02D0     		beq	.L26
 348              	.LVL16:
 349              	.L23:
 196:Core/Src/tim.c ****   {
 197:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
ARM GAS  /tmp/ccQgOQLJ.s 			page 11


 198:Core/Src/tim.c **** 
 199:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 200:Core/Src/tim.c **** 
 201:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 202:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 203:Core/Src/tim.c ****     PB14     ------> TIM1_CH2N
 204:Core/Src/tim.c ****     */
 205:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_14;
 206:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 207:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 208:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 209:Core/Src/tim.c **** 
 210:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 211:Core/Src/tim.c **** 
 212:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 213:Core/Src/tim.c ****   }
 214:Core/Src/tim.c **** 
 215:Core/Src/tim.c **** }
 350              		.loc 1 215 1 view .LVU97
 351 0016 07B0     		add	sp, sp, #28
 352              	.LCFI10:
 353              		.cfi_remember_state
 354              		.cfi_def_cfa_offset 4
 355              		@ sp needed
 356 0018 5DF804FB 		ldr	pc, [sp], #4
 357              	.LVL17:
 358              	.L26:
 359              	.LCFI11:
 360              		.cfi_restore_state
 201:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 361              		.loc 1 201 5 is_stmt 1 view .LVU98
 362              	.LBB5:
 201:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 363              		.loc 1 201 5 view .LVU99
 201:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 364              		.loc 1 201 5 view .LVU100
 365 001c 03F56443 		add	r3, r3, #58368
 366 0020 9A69     		ldr	r2, [r3, #24]
 367 0022 42F00802 		orr	r2, r2, #8
 368 0026 9A61     		str	r2, [r3, #24]
 201:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 369              		.loc 1 201 5 view .LVU101
 370 0028 9B69     		ldr	r3, [r3, #24]
 371 002a 03F00803 		and	r3, r3, #8
 372 002e 0193     		str	r3, [sp, #4]
 201:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 373              		.loc 1 201 5 view .LVU102
 374 0030 019B     		ldr	r3, [sp, #4]
 375              	.LBE5:
 201:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 376              		.loc 1 201 5 view .LVU103
 205:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 377              		.loc 1 205 5 view .LVU104
 205:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 378              		.loc 1 205 25 is_stmt 0 view .LVU105
 379 0032 4FF48043 		mov	r3, #16384
 380 0036 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccQgOQLJ.s 			page 12


 206:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 381              		.loc 1 206 5 is_stmt 1 view .LVU106
 206:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 382              		.loc 1 206 26 is_stmt 0 view .LVU107
 383 0038 0223     		movs	r3, #2
 384 003a 0393     		str	r3, [sp, #12]
 207:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 385              		.loc 1 207 5 is_stmt 1 view .LVU108
 207:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 386              		.loc 1 207 27 is_stmt 0 view .LVU109
 387 003c 0593     		str	r3, [sp, #20]
 208:Core/Src/tim.c **** 
 388              		.loc 1 208 5 is_stmt 1 view .LVU110
 389 003e 02A9     		add	r1, sp, #8
 390 0040 0248     		ldr	r0, .L27+4
 391              	.LVL18:
 208:Core/Src/tim.c **** 
 392              		.loc 1 208 5 is_stmt 0 view .LVU111
 393 0042 FFF7FEFF 		bl	HAL_GPIO_Init
 394              	.LVL19:
 395              		.loc 1 215 1 view .LVU112
 396 0046 E6E7     		b	.L23
 397              	.L28:
 398              		.align	2
 399              	.L27:
 400 0048 002C0140 		.word	1073818624
 401 004c 000C0140 		.word	1073810432
 402              		.cfi_endproc
 403              	.LFE68:
 405              		.section	.text.MX_TIM1_Init,"ax",%progbits
 406              		.align	1
 407              		.global	MX_TIM1_Init
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	MX_TIM1_Init:
 413              	.LFB65:
  32:Core/Src/tim.c **** 
 414              		.loc 1 32 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 88
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 10B5     		push	{r4, lr}
 419              	.LCFI12:
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 4, -8
 422              		.cfi_offset 14, -4
 423 0002 96B0     		sub	sp, sp, #88
 424              	.LCFI13:
 425              		.cfi_def_cfa_offset 96
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 426              		.loc 1 38 3 view .LVU114
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 427              		.loc 1 38 26 is_stmt 0 view .LVU115
 428 0004 0024     		movs	r4, #0
 429 0006 1294     		str	r4, [sp, #72]
 430 0008 1394     		str	r4, [sp, #76]
ARM GAS  /tmp/ccQgOQLJ.s 			page 13


 431 000a 1494     		str	r4, [sp, #80]
 432 000c 1594     		str	r4, [sp, #84]
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 433              		.loc 1 39 3 is_stmt 1 view .LVU116
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 434              		.loc 1 39 27 is_stmt 0 view .LVU117
 435 000e 1094     		str	r4, [sp, #64]
 436 0010 1194     		str	r4, [sp, #68]
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 437              		.loc 1 40 3 is_stmt 1 view .LVU118
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 438              		.loc 1 40 22 is_stmt 0 view .LVU119
 439 0012 0994     		str	r4, [sp, #36]
 440 0014 0A94     		str	r4, [sp, #40]
 441 0016 0B94     		str	r4, [sp, #44]
 442 0018 0C94     		str	r4, [sp, #48]
 443 001a 0D94     		str	r4, [sp, #52]
 444 001c 0E94     		str	r4, [sp, #56]
 445 001e 0F94     		str	r4, [sp, #60]
  41:Core/Src/tim.c **** 
 446              		.loc 1 41 3 is_stmt 1 view .LVU120
  41:Core/Src/tim.c **** 
 447              		.loc 1 41 34 is_stmt 0 view .LVU121
 448 0020 2022     		movs	r2, #32
 449 0022 2146     		mov	r1, r4
 450 0024 01A8     		add	r0, sp, #4
 451 0026 FFF7FEFF 		bl	memset
 452              	.LVL20:
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 7200-1;
 453              		.loc 1 46 3 is_stmt 1 view .LVU122
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 7200-1;
 454              		.loc 1 46 18 is_stmt 0 view .LVU123
 455 002a 2F48     		ldr	r0, .L43
 456 002c 2F4B     		ldr	r3, .L43+4
 457 002e 0360     		str	r3, [r0]
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 458              		.loc 1 47 3 is_stmt 1 view .LVU124
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 459              		.loc 1 47 24 is_stmt 0 view .LVU125
 460 0030 41F61F43 		movw	r3, #7199
 461 0034 4360     		str	r3, [r0, #4]
  48:Core/Src/tim.c ****   htim1.Init.Period = 200-1;
 462              		.loc 1 48 3 is_stmt 1 view .LVU126
  48:Core/Src/tim.c ****   htim1.Init.Period = 200-1;
 463              		.loc 1 48 26 is_stmt 0 view .LVU127
 464 0036 8460     		str	r4, [r0, #8]
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 465              		.loc 1 49 3 is_stmt 1 view .LVU128
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 466              		.loc 1 49 21 is_stmt 0 view .LVU129
 467 0038 C723     		movs	r3, #199
 468 003a C360     		str	r3, [r0, #12]
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 469              		.loc 1 50 3 is_stmt 1 view .LVU130
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 470              		.loc 1 50 28 is_stmt 0 view .LVU131
 471 003c 0461     		str	r4, [r0, #16]
ARM GAS  /tmp/ccQgOQLJ.s 			page 14


  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 472              		.loc 1 51 3 is_stmt 1 view .LVU132
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 473              		.loc 1 51 32 is_stmt 0 view .LVU133
 474 003e 4461     		str	r4, [r0, #20]
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 475              		.loc 1 52 3 is_stmt 1 view .LVU134
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 476              		.loc 1 52 32 is_stmt 0 view .LVU135
 477 0040 8461     		str	r4, [r0, #24]
  53:Core/Src/tim.c ****   {
 478              		.loc 1 53 3 is_stmt 1 view .LVU136
  53:Core/Src/tim.c ****   {
 479              		.loc 1 53 7 is_stmt 0 view .LVU137
 480 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 481              	.LVL21:
  53:Core/Src/tim.c ****   {
 482              		.loc 1 53 6 discriminator 1 view .LVU138
 483 0046 0028     		cmp	r0, #0
 484 0048 3BD1     		bne	.L37
 485              	.L30:
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 486              		.loc 1 57 3 is_stmt 1 view .LVU139
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 487              		.loc 1 57 34 is_stmt 0 view .LVU140
 488 004a 4FF48053 		mov	r3, #4096
 489 004e 1293     		str	r3, [sp, #72]
  58:Core/Src/tim.c ****   {
 490              		.loc 1 58 3 is_stmt 1 view .LVU141
  58:Core/Src/tim.c ****   {
 491              		.loc 1 58 7 is_stmt 0 view .LVU142
 492 0050 12A9     		add	r1, sp, #72
 493 0052 2548     		ldr	r0, .L43
 494 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 495              	.LVL22:
  58:Core/Src/tim.c ****   {
 496              		.loc 1 58 6 discriminator 1 view .LVU143
 497 0058 0028     		cmp	r0, #0
 498 005a 35D1     		bne	.L38
 499              	.L31:
  62:Core/Src/tim.c ****   {
 500              		.loc 1 62 3 is_stmt 1 view .LVU144
  62:Core/Src/tim.c ****   {
 501              		.loc 1 62 7 is_stmt 0 view .LVU145
 502 005c 2248     		ldr	r0, .L43
 503 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 504              	.LVL23:
  62:Core/Src/tim.c ****   {
 505              		.loc 1 62 6 discriminator 1 view .LVU146
 506 0062 0028     		cmp	r0, #0
 507 0064 33D1     		bne	.L39
 508              	.L32:
  66:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 509              		.loc 1 66 3 is_stmt 1 view .LVU147
  66:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 510              		.loc 1 66 37 is_stmt 0 view .LVU148
 511 0066 0023     		movs	r3, #0
ARM GAS  /tmp/ccQgOQLJ.s 			page 15


 512 0068 1093     		str	r3, [sp, #64]
  67:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 513              		.loc 1 67 3 is_stmt 1 view .LVU149
  67:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 514              		.loc 1 67 33 is_stmt 0 view .LVU150
 515 006a 1193     		str	r3, [sp, #68]
  68:Core/Src/tim.c ****   {
 516              		.loc 1 68 3 is_stmt 1 view .LVU151
  68:Core/Src/tim.c ****   {
 517              		.loc 1 68 7 is_stmt 0 view .LVU152
 518 006c 10A9     		add	r1, sp, #64
 519 006e 1E48     		ldr	r0, .L43
 520 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 521              	.LVL24:
  68:Core/Src/tim.c ****   {
 522              		.loc 1 68 6 discriminator 1 view .LVU153
 523 0074 0028     		cmp	r0, #0
 524 0076 2DD1     		bne	.L40
 525              	.L33:
  72:Core/Src/tim.c ****   sConfigOC.Pulse = 180;
 526              		.loc 1 72 3 is_stmt 1 view .LVU154
  72:Core/Src/tim.c ****   sConfigOC.Pulse = 180;
 527              		.loc 1 72 20 is_stmt 0 view .LVU155
 528 0078 6023     		movs	r3, #96
 529 007a 0993     		str	r3, [sp, #36]
  73:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 530              		.loc 1 73 3 is_stmt 1 view .LVU156
  73:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 531              		.loc 1 73 19 is_stmt 0 view .LVU157
 532 007c B423     		movs	r3, #180
 533 007e 0A93     		str	r3, [sp, #40]
  74:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 534              		.loc 1 74 3 is_stmt 1 view .LVU158
  74:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 535              		.loc 1 74 24 is_stmt 0 view .LVU159
 536 0080 0023     		movs	r3, #0
 537 0082 0B93     		str	r3, [sp, #44]
  75:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 538              		.loc 1 75 3 is_stmt 1 view .LVU160
  75:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 539              		.loc 1 75 25 is_stmt 0 view .LVU161
 540 0084 0822     		movs	r2, #8
 541 0086 0C92     		str	r2, [sp, #48]
  76:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 542              		.loc 1 76 3 is_stmt 1 view .LVU162
  76:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 543              		.loc 1 76 24 is_stmt 0 view .LVU163
 544 0088 0D93     		str	r3, [sp, #52]
  77:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 545              		.loc 1 77 3 is_stmt 1 view .LVU164
  77:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 546              		.loc 1 77 25 is_stmt 0 view .LVU165
 547 008a 0E93     		str	r3, [sp, #56]
  78:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 548              		.loc 1 78 3 is_stmt 1 view .LVU166
  78:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 549              		.loc 1 78 26 is_stmt 0 view .LVU167
ARM GAS  /tmp/ccQgOQLJ.s 			page 16


 550 008c 0F93     		str	r3, [sp, #60]
  79:Core/Src/tim.c ****   {
 551              		.loc 1 79 3 is_stmt 1 view .LVU168
  79:Core/Src/tim.c ****   {
 552              		.loc 1 79 7 is_stmt 0 view .LVU169
 553 008e 0422     		movs	r2, #4
 554 0090 09A9     		add	r1, sp, #36
 555 0092 1548     		ldr	r0, .L43
 556 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 557              	.LVL25:
  79:Core/Src/tim.c ****   {
 558              		.loc 1 79 6 discriminator 1 view .LVU170
 559 0098 F8B9     		cbnz	r0, .L41
 560              	.L34:
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 561              		.loc 1 83 3 is_stmt 1 view .LVU171
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 562              		.loc 1 83 40 is_stmt 0 view .LVU172
 563 009a 0023     		movs	r3, #0
 564 009c 0193     		str	r3, [sp, #4]
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 565              		.loc 1 84 3 is_stmt 1 view .LVU173
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 566              		.loc 1 84 41 is_stmt 0 view .LVU174
 567 009e 0293     		str	r3, [sp, #8]
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 568              		.loc 1 85 3 is_stmt 1 view .LVU175
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 569              		.loc 1 85 34 is_stmt 0 view .LVU176
 570 00a0 0393     		str	r3, [sp, #12]
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 571              		.loc 1 86 3 is_stmt 1 view .LVU177
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 572              		.loc 1 86 33 is_stmt 0 view .LVU178
 573 00a2 0493     		str	r3, [sp, #16]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 574              		.loc 1 87 3 is_stmt 1 view .LVU179
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 575              		.loc 1 87 35 is_stmt 0 view .LVU180
 576 00a4 0593     		str	r3, [sp, #20]
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 577              		.loc 1 88 3 is_stmt 1 view .LVU181
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 578              		.loc 1 88 38 is_stmt 0 view .LVU182
 579 00a6 4FF40052 		mov	r2, #8192
 580 00aa 0692     		str	r2, [sp, #24]
  89:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 581              		.loc 1 89 3 is_stmt 1 view .LVU183
  89:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 582              		.loc 1 89 40 is_stmt 0 view .LVU184
 583 00ac 0893     		str	r3, [sp, #32]
  90:Core/Src/tim.c ****   {
 584              		.loc 1 90 3 is_stmt 1 view .LVU185
  90:Core/Src/tim.c ****   {
 585              		.loc 1 90 7 is_stmt 0 view .LVU186
 586 00ae 01A9     		add	r1, sp, #4
 587 00b0 0D48     		ldr	r0, .L43
ARM GAS  /tmp/ccQgOQLJ.s 			page 17


 588 00b2 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 589              	.LVL26:
  90:Core/Src/tim.c ****   {
 590              		.loc 1 90 6 discriminator 1 view .LVU187
 591 00b6 98B9     		cbnz	r0, .L42
 592              	.L35:
  97:Core/Src/tim.c **** 
 593              		.loc 1 97 3 is_stmt 1 view .LVU188
 594 00b8 0B48     		ldr	r0, .L43
 595 00ba FFF7FEFF 		bl	HAL_TIM_MspPostInit
 596              	.LVL27:
  99:Core/Src/tim.c **** /* TIM2 init function */
 597              		.loc 1 99 1 is_stmt 0 view .LVU189
 598 00be 16B0     		add	sp, sp, #88
 599              	.LCFI14:
 600              		.cfi_remember_state
 601              		.cfi_def_cfa_offset 8
 602              		@ sp needed
 603 00c0 10BD     		pop	{r4, pc}
 604              	.L37:
 605              	.LCFI15:
 606              		.cfi_restore_state
  55:Core/Src/tim.c ****   }
 607              		.loc 1 55 5 is_stmt 1 view .LVU190
 608 00c2 FFF7FEFF 		bl	Error_Handler
 609              	.LVL28:
 610 00c6 C0E7     		b	.L30
 611              	.L38:
  60:Core/Src/tim.c ****   }
 612              		.loc 1 60 5 view .LVU191
 613 00c8 FFF7FEFF 		bl	Error_Handler
 614              	.LVL29:
 615 00cc C6E7     		b	.L31
 616              	.L39:
  64:Core/Src/tim.c ****   }
 617              		.loc 1 64 5 view .LVU192
 618 00ce FFF7FEFF 		bl	Error_Handler
 619              	.LVL30:
 620 00d2 C8E7     		b	.L32
 621              	.L40:
  70:Core/Src/tim.c ****   }
 622              		.loc 1 70 5 view .LVU193
 623 00d4 FFF7FEFF 		bl	Error_Handler
 624              	.LVL31:
 625 00d8 CEE7     		b	.L33
 626              	.L41:
  81:Core/Src/tim.c ****   }
 627              		.loc 1 81 5 view .LVU194
 628 00da FFF7FEFF 		bl	Error_Handler
 629              	.LVL32:
 630 00de DCE7     		b	.L34
 631              	.L42:
  92:Core/Src/tim.c ****   }
 632              		.loc 1 92 5 view .LVU195
 633 00e0 FFF7FEFF 		bl	Error_Handler
 634              	.LVL33:
 635 00e4 E8E7     		b	.L35
ARM GAS  /tmp/ccQgOQLJ.s 			page 18


 636              	.L44:
 637 00e6 00BF     		.align	2
 638              	.L43:
 639 00e8 00000000 		.word	htim1
 640 00ec 002C0140 		.word	1073818624
 641              		.cfi_endproc
 642              	.LFE65:
 644              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 645              		.align	1
 646              		.global	HAL_TIM_Base_MspDeInit
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 651              	HAL_TIM_Base_MspDeInit:
 652              	.LVL34:
 653              	.LFB69:
 216:Core/Src/tim.c **** 
 217:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 218:Core/Src/tim.c **** {
 654              		.loc 1 218 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		.loc 1 218 1 is_stmt 0 view .LVU197
 659 0000 08B5     		push	{r3, lr}
 660              	.LCFI16:
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 3, -8
 663              		.cfi_offset 14, -4
 219:Core/Src/tim.c **** 
 220:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 664              		.loc 1 220 3 is_stmt 1 view .LVU198
 665              		.loc 1 220 20 is_stmt 0 view .LVU199
 666 0002 0368     		ldr	r3, [r0]
 667              		.loc 1 220 5 view .LVU200
 668 0004 0B4A     		ldr	r2, .L51
 669 0006 9342     		cmp	r3, r2
 670 0008 03D0     		beq	.L49
 221:Core/Src/tim.c ****   {
 222:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 223:Core/Src/tim.c **** 
 224:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 225:Core/Src/tim.c ****     /* Peripheral clock disable */
 226:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 227:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 228:Core/Src/tim.c **** 
 229:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 230:Core/Src/tim.c ****   }
 231:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM2)
 671              		.loc 1 231 8 is_stmt 1 view .LVU201
 672              		.loc 1 231 10 is_stmt 0 view .LVU202
 673 000a B3F1804F 		cmp	r3, #1073741824
 674 000e 07D0     		beq	.L50
 675              	.LVL35:
 676              	.L45:
 232:Core/Src/tim.c ****   {
 233:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
ARM GAS  /tmp/ccQgOQLJ.s 			page 19


 234:Core/Src/tim.c **** 
 235:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 236:Core/Src/tim.c ****     /* Peripheral clock disable */
 237:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 238:Core/Src/tim.c **** 
 239:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 240:Core/Src/tim.c ****     PA1     ------> TIM2_CH2
 241:Core/Src/tim.c ****     */
 242:Core/Src/tim.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 243:Core/Src/tim.c **** 
 244:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 245:Core/Src/tim.c **** 
 246:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 247:Core/Src/tim.c ****   }
 248:Core/Src/tim.c **** }
 677              		.loc 1 248 1 view .LVU203
 678 0010 08BD     		pop	{r3, pc}
 679              	.LVL36:
 680              	.L49:
 226:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 681              		.loc 1 226 5 is_stmt 1 view .LVU204
 682 0012 02F56442 		add	r2, r2, #58368
 683 0016 9369     		ldr	r3, [r2, #24]
 684 0018 23F40063 		bic	r3, r3, #2048
 685 001c 9361     		str	r3, [r2, #24]
 686 001e F7E7     		b	.L45
 687              	.L50:
 237:Core/Src/tim.c **** 
 688              		.loc 1 237 5 view .LVU205
 689 0020 054A     		ldr	r2, .L51+4
 690 0022 D369     		ldr	r3, [r2, #28]
 691 0024 23F00103 		bic	r3, r3, #1
 692 0028 D361     		str	r3, [r2, #28]
 242:Core/Src/tim.c **** 
 693              		.loc 1 242 5 view .LVU206
 694 002a 0221     		movs	r1, #2
 695 002c 0348     		ldr	r0, .L51+8
 696              	.LVL37:
 242:Core/Src/tim.c **** 
 697              		.loc 1 242 5 is_stmt 0 view .LVU207
 698 002e FFF7FEFF 		bl	HAL_GPIO_DeInit
 699              	.LVL38:
 700              		.loc 1 248 1 view .LVU208
 701 0032 EDE7     		b	.L45
 702              	.L52:
 703              		.align	2
 704              	.L51:
 705 0034 002C0140 		.word	1073818624
 706 0038 00100240 		.word	1073876992
 707 003c 00080140 		.word	1073809408
 708              		.cfi_endproc
 709              	.LFE69:
 711              		.global	htim2
 712              		.section	.bss.htim2,"aw",%nobits
 713              		.align	2
 716              	htim2:
 717 0000 00000000 		.space	72
ARM GAS  /tmp/ccQgOQLJ.s 			page 20


 717      00000000 
 717      00000000 
 717      00000000 
 717      00000000 
 718              		.global	htim1
 719              		.section	.bss.htim1,"aw",%nobits
 720              		.align	2
 723              	htim1:
 724 0000 00000000 		.space	72
 724      00000000 
 724      00000000 
 724      00000000 
 724      00000000 
 725              		.text
 726              	.Letext0:
 727              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 728              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 729              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 730              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 731              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 732              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 733              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 734              		.file 9 "Core/Inc/tim.h"
 735              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 736              		.file 11 "Core/Inc/main.h"
 737              		.file 12 "<built-in>"
ARM GAS  /tmp/ccQgOQLJ.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
     /tmp/ccQgOQLJ.s:19     .text.MX_TIM2_Init:00000000 $t
     /tmp/ccQgOQLJ.s:25     .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccQgOQLJ.s:182    .text.MX_TIM2_Init:0000009c $d
     /tmp/ccQgOQLJ.s:716    .bss.htim2:00000000 htim2
     /tmp/ccQgOQLJ.s:187    .text.HAL_TIM_Base_MspInit:00000000 $t
     /tmp/ccQgOQLJ.s:193    .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
     /tmp/ccQgOQLJ.s:306    .text.HAL_TIM_Base_MspInit:00000070 $d
     /tmp/ccQgOQLJ.s:313    .text.HAL_TIM_MspPostInit:00000000 $t
     /tmp/ccQgOQLJ.s:319    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
     /tmp/ccQgOQLJ.s:400    .text.HAL_TIM_MspPostInit:00000048 $d
     /tmp/ccQgOQLJ.s:406    .text.MX_TIM1_Init:00000000 $t
     /tmp/ccQgOQLJ.s:412    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccQgOQLJ.s:639    .text.MX_TIM1_Init:000000e8 $d
     /tmp/ccQgOQLJ.s:723    .bss.htim1:00000000 htim1
     /tmp/ccQgOQLJ.s:645    .text.HAL_TIM_Base_MspDeInit:00000000 $t
     /tmp/ccQgOQLJ.s:651    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
     /tmp/ccQgOQLJ.s:705    .text.HAL_TIM_Base_MspDeInit:00000034 $d
     /tmp/ccQgOQLJ.s:713    .bss.htim2:00000000 $d
     /tmp/ccQgOQLJ.s:720    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
Error_Handler
HAL_GPIO_Init
memset
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_GPIO_DeInit
